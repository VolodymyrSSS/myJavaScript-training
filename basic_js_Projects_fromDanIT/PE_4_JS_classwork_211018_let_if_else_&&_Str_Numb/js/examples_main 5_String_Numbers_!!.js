// В JS есть 3 типа преобразования примитивов: в строку, в число и в логическое значение

// 1) Строковое преобразование происходит, когда требуется представление чего-либо в виде строки
// var a = true;
// alert( a ); // "true" - тут преобразование производит функция alert
// alert( String(null) === "null" ); // true - тут преобразование происходит явным вызовом String(val)
// alert( true + "test" ); // "truetest" - тут преобразование происходит оператором "+", где один из аргументов строка
// alert( "123" + undefined ); // "123undefined" - тут преобразование происходит так же оператором "+"

// 2) Численное преобразование происходит когда требуется представление чего-либо в виде числа. Чаще всего в математических 
// функциях и выражениях, а также при сравнении данных различных типов (кроме сравнений ===, !==).

//Для преобразования к числу в явном виде можно вызвать Number("val"), либо, что короче, поставить перед выражением унарный плюс +"value"
// var a = Number("123"); // 123 - преобразование с помощью выражения Number("val")
// var a = +"123"; // 123 - преобразование с помощью унарный плюс "+"

// Значение	       Преобразуется в...
// undefined	          NaN
// Cтрока-ошибка          NaN
// null	                  0
// Пустая Строка          0
// Строка            "считывается" число
// true / false	        1 / 0
// Строка	        Пробельные символы по краям обрезаются

// alert( +true ); // 1 - преобразование в число логического значения true
// alert( +false ); // 0 - преобразование в число логического значения false
// alert( +"   \n  123   \n  \n" ); // 123 - после обрезания пробельных символов останется "123"
// alert( "\n0 " == 0 ); // true - сравнение "==" приводит обе части к числу обрезав пробельные символы слева и преобразовав 0 в 0 и стало 0 == 0
// alert( "\n" == false ); // true -  сравнение "==" приводит обе части к числу и стало 0 == 0
// alert( "1" == true ); // true - сравнение "==" приводит обе части к числу и стало 1 == 1

//Специальные значения преобразуются к числу при арифметических операциях и сравнениях > >= < <= так:
// Значение	        Преобразуется в...
// undefined	        NaN
// null	                0

// alert( null > 0 ); // false (не больше), т.к. null преобразуется к 0
// alert( undefined > 0 ); // false, т.к. undefined преобразуется в NaN

// но Специальные значения при проверке равенства == не подчиняются законам математики
// Есть жёсткое правило: null == undefined и только.
// alert( null >= 0 ); // true - здесь null преобразуется к 0 именно таким >= выражением
// alert( null == 0 ); // false (и не равен!), т.к. == рассматривает null особо
// Значение undefined вообще «несравнимо»
// alert( undefined == 0 ); // false, т.к. это undefined (без преобразования)
// alert( undefined < 0 ); // false, т.к. undefined -> NaN
// во избежание ошибок лучше не давать специальным значениям участвовать в сравнениях > >= < <=

// 3) Преобразование к логическому значению происходит когда требуется представление чего-либо в виде Boolean значений true/false
// Преобразование к true/false происходит в логическом контексте, таком как if(value), и при применении логических операторов

// Значение	          Преобразуется в...
// undefined,	              false
// null                      false
// Числа	              Все true
// 0                         false
// NaN                       false
// Строки	              Все true
// Пустя Строка ""           false
// Объекты	           Всегда true

// Для явного преобразования используется двойное логическое отрицание !!value или вызов Boolean("value")

// Кроме того "0" и "строка из пробелов" при преобразовании к логическому значению в JavaScript является true 
// alert( !!"0" ); // true
// alert( !!" " ); // любые непустые строки, даже из пробелов - true!
// alert( 0 == "\n0\n" ); // true - т.к. число 0 == числу 0 преобразованому к чисельному типу, ("\n0\n") – любая не пустая строка в логическом контексте равна true = 1  





//                                                    // П Р И К Л А Д И




/*Який результат буде у виразах нижче виразах ? І чому? */

// "" + 1 + 0                  // "10" - Оператор "+" у цьому випадку додає пустий рядок "" до 1, а потім новий рядок "1" додає 0 і стає далі рядком
// "" - 1 + 0                  // -1 - Оператор "-" працює тільки з числами, а тому одразу приводить "" до 0
// true + false                // 1 - бо при числовому перетворенні true=1, а false=0, а тому 1+0=1
// 6 / "3"                     // 2 - Оператор "/" працює тільки з числами, а тому одразу приводить "3" до 3
// "2" * "3"                   // 6 - Оператор "*" працює тільки з числами, а тому одразу приводить "2" до 2
// 4 + 5 + "px"                // "9px" - бо споатку обраховує 4+5, а потім додає рядок "px" (конкатенація)
// "$" + 4 + 5                 // "$45" - бо спочатку рядок "$" додає 4 і знову до отриманого рядка "$4" додає 5
// "4" - 2                     // 2 - Оператор "-" працює тільки з числами, тому одразу приводить "4" до 4 
// "4px" - 2                   // NaN - бо оператор "-" працює тільки з числами, а тому "4px" одразу перетворюється як помилка і видає NaN
// 7 / 0                       // Іnfinity - бо число при діленні на 0 в JS дає Іnfinity
// "-9\n" + 5                  // "-9\n5"  - бо додає рядок "-9\n" до числа 5 і отримуємо знову рядок 
// "-9\n" - 5                  // -14 - Оператор "-" працює тільки з числами, а тому обраховує вираз згідно математичних правил 
// 5 && 2                      // 2 - бо оператор "&&" при відсутності неправдивих значень видає останнє правдиве
// 2 && 5                      // 5 - бо оператор "&&" при відсутності неправдивих значень видає останнє правдиве
// 5 || 0                      // 5 - бо оператор "||" видає перше правдиве значення
// 0 || 5                      // 5 - бо оператор "||" видає перше правдиве значення
// null + 1                    // 1 - бо при числовому перетворенні стає 0, а тому 0+1=1
// undefined + 1               // NaN - бо при числовому перетворенні undefined стаэ NaN, а NaN + 1 = NaN
// null == "\n0\n"             // false - перетворення до логічного значення не відбувається бо null == undefined і тільки
// +null == +"\n0\n"           // true - бо перетворюючи до числових значень +null=0 і +"\n0\n"=0, а тому 0 == 0



/* Написати код, використовуючи оператои if...else,  який буде визначати чи рік є високосний чи ні?
Спочатку запитати у відвідувача ввести рік числом, і надати формат введення року. Зробити перевірку на число.
Потім вивести на екран результат обчислення чи рік високосний чи ні.
Умовою перевірки високосного року є те, що він ділиться націло (без залишку) на 4 або на 400. 
Але з цього правила є виключення: є століття, які не діляться націло на 400,
а тому при діленні на 4 рік може бути невисокосним. Тому потрібно включити
обов'язкову додаткову перевірку: високосний рік не має ділитись на 100. У разі якщо введений рік ділиться
на 100 то високосним роком буде той, який буде ділитись націол на 4 або на 400. 
Для перевірки результату, високосними роками є: 1632, 1812, 1924, 1972, 1976, 1080, а 2000 рік
є високосним роком, який буває 1 раз в 400 років */

// Рішення:
// Варіант 1:
let year = Number(prompt("Введіть рік числом", "1900"));
if (((year % 4 == 0) && (year % 100 != 0)) || (year % 400 == 0)) {
    alert (year + " - цей рік, високосний!")
} else {
    alert (`${year} невисокосний рік`);
}

//варіант2:
let year = +prompt("Введіть рік числом", "1980")
if (!(year % 4)) {
    if (year % 100) {
        console.log(`${year} - цей рік є високосний`);
    }
    else {
        if(year % 400) {
            console.log(`${year} - невисокосний рік`);
        }
        else {
            console.log(`${year} - цей рік є високосний`);
        }
    }
}
else {
    console.log(`${year} - невисокосний рік`);
}



/*Написати код, який буде запитувати скільки налити горівки в залежності від віку та ваги
Зробити перевірку на введення числових форм .*/

// let age = Number(prompt("Ваш вік?"));
// if(isNaN(age)) {                                   //Перевірка якщо не введено число через isNaN()
//     age = prompt("Введіть ваш вік числом, як показано тут", 25);
// } else if (age < 18) {
//     alert("Спочатку треба закінчити школу!!!");
// }
// else {
//     let drink = Number(prompt("Скільки налити?")); //Переведення в числову форму введення через Number()
//     let weight = Number(prompt("Ваша вага?"));     //Переведення в числову форму введення через Number()
//     if(drink > 400 && weight < 50) {
//         alert("Спочатку повідомте адресу куди потрібно привезти тіло");
//     } else if ((drink > 400 && weight > 80) || weight > 100) { // спочатку вираховується те, що в дужках
//         alert("Не бажаєте мати нашу клубную картку?");
//     }
// }